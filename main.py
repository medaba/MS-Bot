# -*- coding: utf-8 -*-

import asyncio
import logging
import ujson as json

from aiogram import types
from aiogram.types import Message, ChatType
from aiogram import Bot, Dispatcher, executor
from aiogram.dispatcher import FSMContext
from aiogram.contrib.fsm_storage.memory import MemoryStorage

import config
import utils
import keyboards
import mailing
from check_distance import calculate_distance
from form import Form
from database import AioSQLiteWrapper
from polls_ids import polls_id


logging.basicConfig(
    level=logging.INFO,
    filename='logger.log',
    filemode='a',
    format='%(asctime)s | %(name)s | %(levelname)-4s | %(message)s',
    datefmt='%Y-%m-%d %H:%M:%S'
    )

logger = logging.getLogger()

bot = Bot(token=config.token, parse_mode="Markdown")
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)


async def startup(*args):
    try:
        await bot.send_message(chat_id=config.main_admin, text="–ë–∞–∑–∞, —è –Ω–∞ —Å–≤—è–∑–∏ ‚úÖ")
    except Exception as e:
        print(e)


async def shutdown(*args):
    try:
        await bot.send_message(chat_id=config.main_admin, text="–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω ‚ùå")
    except Exception as e:
        print(e)


async def main_menu(m: Message):
    await m.answer(
        "ü§ñ *–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.* \n\n",
        reply_markup=keyboards.main_menu()
    )

    users_table = AioSQLiteWrapper("g35.sqlite", "users")
    try:
        await users_table.fetch_user_by_id(m.from_user.id)        # –ü–æ–ª—É—á–∏—Ç—å —é–∑–µ—Ä–∞ –∏–∑ –ë–î
        await users_table.set_user_active(m.from_user.id)         # –í–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ active
        await users_table.set_user_polls_page(m.from_user.id, 0)  # –û–±–Ω—É–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü –æ–ø—Ä–æ—Å–æ–≤
    except:
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —é–∑–µ—Ä–∞ –≤ –ë–î.
        await users_table.add_row("(user_id, first_name, last_name, username)",
                                  f"({m.from_user.id}, '{m.from_user.first_name}', '{m.from_user.last_name}', '{m.from_user.username}')")
        print(f"–î–æ–±–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {m.from_user.first_name}, {m.from_user.id}.")
        logger.info(f"–î–æ–±–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {m.from_user.first_name}, {m.from_user.id}.")


@dp.message_handler(ChatType.is_private, commands=['start'])
async def start(m: Message):
    await main_menu(m)


# @dp.message_handler(ChatType.is_private)
# async def send_json(m: Message):
#     """
#     –ù–∞ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–≤–µ—á–∞–µ—Ç —Å—ã—Ä—ã–º JSON-–æ–º
#     """
#     print(str(m.as_json()))
#     await bot.send_message(
#         m.chat.id,
#         str(m.as_json()),
#         parse_mode='HTML'
#     )


@dp.message_handler(ChatType.is_private, text="üëë –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def show_main_menu(m: Message):
    await main_menu(m)


@dp.message_handler(ChatType.is_private, text=['ü§ñ –û –ë–æ—Ç–µ'])
async def info(m: Message):
    await m.answer(
        "‚òòÔ∏è *–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –±–æ—Ç–µ* \n\n"
        "üõ†Ô∏è –ë–æ—Ç —Å–æ–∑–¥–∞–Ω —Å —Ü–µ–ª—å—é –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –ø–æ–ª–µ–∑–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π"
        " –¥–ª—è –ª—é–¥–µ–π, —Å—Ç–æ–ª–∫–Ω—É–≤—à–∏—Ö—Å—è —Å —Ä–∞—Å—Å–µ—è–Ω–Ω—ã–º —Å–∫–ª–µ—Ä–æ–∑–æ–º.\n\n",
        reply_markup=keyboards.about_bot()
    )


@dp.message_handler(ChatType.is_private, text=["‚ö†Ô∏è –î–∏—Å–∫–ª–µ–π–º–µ—Ä"])
async def info(m: Message):
    await m.answer(
        "‚ö†Ô∏è *–î–ò–°–ö–õ–ï–ô–ú–ï–†:*\n\n"
        "–î–∞–Ω–Ω—ã–π –±–æ—Ç —è–≤–ª—è–µ—Ç—Å—è –ø–æ–ø—ã—Ç–∫–æ–π —Å–æ–±—Ä–∞—Ç—å –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ –ø–æ–ª–µ–∑–Ω—ã–µ "
        " —Å—Å—ã–ª–∫–∏, —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã –¥–ª—è –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ —Å—Ç–æ–ª–∫–Ω—É–ª–∏—Å—å —Å –†–°. "
        "–°–∞–º —è —Ç–∞–∫–æ–π –∂–µ –ø–∞—Ü–∏–µ–Ω—Ç –∏ –Ω–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é –∫–∞–∫–∏–µ-–ª–∏–±–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∏–ª–∏ —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞. "
        "–ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –ª–µ—á–µ–Ω–∏—è —Å—Ç–æ–∏—Ç –ø–æ–ª–∞–≥–∞—Ç—å—Å—è –Ω–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –≤–∞—à–µ–≥–æ –ª–µ—á–∞—â–µ–≥–æ –≤—Ä–∞—á–∞, "
        "–∞ —è –≤ —Å–≤–æ—é –æ—á–µ—Ä–µ–¥—å –º–æ–≥—É –ª–∏—à—å –ø–æ–∂–µ–ª–∞—Ç—å –≤–∞–º –Ω–∞–π—Ç–∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ä–æ—à–µ–≥–æ –¥–æ–∫—Ç–æ—Ä–∞.",
        reply_markup=keyboards.about_bot()
    )


@dp.message_handler(ChatType.is_private, text=["‚òéÔ∏è –ö–æ–Ω—Ç–∞–∫—Ç—ã"])
async def contact(m: Message):
    await m.answer(
        "üë®‚Äçüíª *–ö–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è —Å–≤—è–∑–∏ —Å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º:* \n\n"
        "–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –∫–∞–∫–∏–µ-–ª–∏–±–æ –∑–∞–º–µ—á–∞–Ω–∏—è –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, "
        "—Ç–æ –≤—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞ –º–æ–π —Ä–∞–±–æ—á–∏–π –∞–∫–∫–∞—É–Ω—Ç: \n\n[BOTSFAM](https://t.me/alotofbots)",
        parse_mode="Markdown",
        reply_markup=keyboards.contacts(),
        disable_web_page_preview=True
    )


@dp.message_handler(ChatType.is_private, text=["‚úÖ –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É –Ω–∞ –≤–∏—Ç–∞–º–∏–Ω—ã"])
async def donate(m: Message):
    await m.answer(
        "*–ö–∞—Ä—Ç–∞* (QIWI/VISA): `4693 9575 5871 1698` \n\n"
        "*QIWI* –ø–µ—Ä–µ–≤–æ–¥ –ø–æ –Ω–∏–∫–Ω–µ–π–º—É: https://qiwi.com/n/SUNNYDAY\n\n"
        "*Yandex.–î–µ–Ω—å–≥–∏:* `410012455548219`",
        reply_markup=keyboards.contacts()
    )


@dp.message_handler(ChatType.is_private, text=["üëæ QR-—Å—Å—ã–ª–∫–∞"])
async def qr(m: Message):
    await m.answer_photo(
        photo="AgACAgIAAxkBAAIEQV7xyOp4PpNtDS5RPHvCfb0nni9SAAIDrzEbWNOQS5YVAAEyn-HziZ2L5pEuAAMBAAMCAANtAAOpewMAARoE",
        caption=r"üü† https://t.me/g35_robot",
        parse_mode="HTML"
    )


@dp.message_handler(ChatType.is_private, text=["üë®‚Äçüíª –ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥"])
async def source_code(m: Message):
    await m.answer(
        "*–ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –ø—Ä–æ–µ–∫—Ç–∞:* \n\n"
        "https://github.com/medaba/MS-Bot",
        reply_markup=keyboards.source_code(),
        disable_web_page_preview=True
    )


@dp.message_handler(ChatType.is_private, text=['üíª –°—Å—ã–ª–∫–∏'])
async def useful_links(m: Message):
    await m.answer(
        '–í —ç—Ç–æ–º –º–µ–Ω—é —Å–æ–±—Ä–∞–Ω—ã —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø–æ–ª–µ–∑–Ω—ã–µ –æ–Ω–ª–∞–π–Ω-—Ä–µ—Å—É—Ä—Å—ã –æ –†–°, —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è —Ä–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏–∏, ' 
        '—Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª—ã/–≥—Ä—É–ø–ø—ã –∏ —Ç.–¥. \n\n'
        '–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –∫–∞–∫–∏–µ-–ª–∏–±–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –∏—Ö *—Å –∫—Ä–∞—Ç–∫–∏–º –æ–ø–∏—Å–∞–Ω–∏–µ–º* –ø—Ä—è–º–æ –≤ —ç—Ç–æ—Ç —á–∞—Ç.',
        reply_markup=keyboards.links()
    )


@dp.message_handler(ChatType.is_private, text=['‚úàÔ∏è –¢–µ–ª–µ–≥—Ä–∞–º'])
async def rehab(m: Message):
    await m.answer(
        "üî∏ [–î–µ–≤–æ—á–∫–∞ —Å –†–°](https://t.me/ms_girl) - "
        "–ü–µ—Ä–µ–≤–æ–¥—ã —Å—Ç–∞—Ç–µ–π —Å –∞–Ω–≥–ª–æ—è–∑—ã—á–Ω—ã—Ö –∏ –Ω–µ–º–µ—Ü–∫–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤, —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ.\n\n"
        "üî∏ [–ú–æ—Å–û–†–°](https://t.me/moscowors) - –∫–∞–Ω–∞–ª –º–æ—Å–∫–æ–≤—Å–∫–æ–≥–æ –†–°-—Å–æ–æ–±—â–µ—Å—Ç–≤–∞ (–±—É–¥–µ—Ç –ø–æ–ª–µ–∑–µ–Ω –Ω–µ —Ç–æ–ª—å–∫–æ –º–æ—Å–∫–≤–∏—á–∞–º).\n\n"
        "üî∏ [–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ —Å–∫–ª–µ—Ä–æ–∑–Ω–∏–∫–∞](https://t.me/biblioteka_skleroznika) - "
        "—Å—Ç–∞—Ç—å–∏, –∫–Ω–∏–≥–∏, –≤–∏–¥–µ–æ –ø—Ä–æ –†–° –∏ –æ –∑–¥–æ—Ä–æ–≤—å–µ –≤ —Ü–µ–ª–æ–º.\n\n"
        "üî∏ [–†–∞—Å—Å–µ—è–Ω–Ω—ã–π —Å–∫–ª–µ—Ä–æ–∑](https://t.me/msneurol) - —Ç–µ–ª–µ–≥—Ä–∞–º-—ç–Ω—Ü–∏–∫–ª–æ–ø–µ–¥–∏—è –ø–æ –†–°.\n\n"
        "üî∏ [G35](https://t.me/mscler) - –∫–∞–Ω–∞–ª –¥–ª—è –æ–±—â–µ–Ω–∏—è –Ω–∞ —Ç–µ–º—ã —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –†–°.\n\n",
        disable_web_page_preview=True
    )


@dp.message_handler(ChatType.is_private, text=['üåê –°–∞–π—Ç—ã'])
async def rehab(m: Message):
    await m.answer(
        "üî∏ [–ú–æ—Å–û–†–°](http://mosors.ru/) - —Å–∞–π—Ç –ú–æ—Å–∫–æ–≤—Å–∫–æ–≥–æ –†–°-—Å–æ–æ–±—â–µ—Å—Ç–≤–∞.\n\n"
        "üî∏ [SCLEROS.RU](https://scleros.ru/) - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ-–æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –ø–æ—Ä—Ç–∞–ª. –ù–æ–≤–æ—Å—Ç–∏, —Ñ–æ—Ä—É–º –∏ —Ç.–¥.\n\n"
        "üî∏ [–û–û–û–ò-–ë–†–°](https://—Ñ–æ—Ä—É–º.–æ–æ–æ–∏-–±—Ä—Å.—Ä—Ñ/) - —Ñ–æ—Ä—É–º –¥–ª—è –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ —Å —Ä–∞—Å—Å–µ—è–Ω–Ω—ã–º —Å–∫–ª–µ—Ä–æ–∑–æ–º.\n\n"
        "üî∏ [G35.CLUB](https://g35.club/) - –æ–±–∑–æ—Ä—ã –∑–∞—Ä—É–±–µ–∂–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ä–µ—Ü–µ–Ω–∑–∏—Ä—É–µ–º—ã—Ö –º–µ–¥. –∂—É—Ä–Ω–∞–ª–æ–≤.\n\n"
        "üî∏ [NEUROL.RU](http://neurol.ru/) - —Å–∞–π—Ç –ö–∞–∑–∞–Ω—Å–∫–æ–≥–æ –†–°-—Ü–µ–Ω—Ç—Ä–∞.\n\n",
        disable_web_page_preview=True
    )


@dp.message_handler(ChatType.is_private, text=['üóÇÔ∏è –†–∞–∑–Ω–æ–µ'])
async def other(m: Message):
    await m.answer(
        "üî∏ [–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä EDSS](http://edss.neurol.ru/edss_ru/) - –æ–Ω–ª–∞–π–Ω –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä. "
        "–¥–ª—è –æ—Ü–µ–Ω–∫–∏ —Å—Ç–µ–ø–µ–Ω–∏ –∏–Ω–≤–∞–ª–∏–¥–∏–∑–∞—Ü–∏–∏ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ —Å –†–°. –í–µ—Ä—Å–∏—è –¥–ª—è –≤—Ä–∞—á–µ–π –Ω–µ–≤—Ä–æ–ª–æ–≥–æ–≤.\n\n",
        disable_web_page_preview=True
    )


@dp.message_handler(ChatType.is_private, text=['‚ô•Ô∏è –†–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏—è'])
async def rehab(m: Message):
    await m.answer(
        "*–£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è —Ä–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏–∏. –ö—É—Ä—Å –º–æ–ª–æ–¥–æ–≥–æ –±–æ–π—Ü–∞* Ô∏èü§∫Ô∏è\n\n"
        "–£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –ø—Ä–∏ —Ä–∞—Å—Å–µ—è–Ω–Ω–æ–º —Å–∫–ª–µ—Ä–æ–∑–µ, "
        "–ø–æ–∑–≤–æ–ª—è—é—Ç –∑–∞–º–µ–¥–ª–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ –∏ –∑–∞–º–µ—Ç–Ω–æ —É–ª—É—á—à–∏—Ç—å –æ–±—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ. \n\n\n"
        "üî∏ –ö–æ–º–ø–ª–µ–∫—Å –¥–æ–º–∞—à–Ω–∏—Ö —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –¥–ª—è –±–æ–¥—Ä–æ—Å—Ç–∏ –∏ –ø–æ–¥–Ω—è—Ç–∏—è –±–æ–µ–≤–æ–≥–æ –¥—É—Ö–∞: "
        "[YouTube/–ü–ª–µ–π–ª–∏—Å—Ç](https://www.youtube.com/watch?v=A1wB3qlhzRI&list=PLq3gpRvKC5jbuzKD61X6YIfBdKcGO30EJ)\n\n"
        "üî∏ –ü–æ–¥–±–æ—Ä–∫–∞ —Ä–∞–∑–º–∏–Ω–æ—á–Ω—ã—Ö —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π: "
        "[YouTube](https://www.youtube.com/watch?v=HC15GNT9FkY)\n\n"
        "üî∏ –†–∞–∑–≤–∏—Ç–∏–µ –º–µ–ª–∫–æ–π –º–æ—Ç–æ—Ä–∏–∫–∏ –ø–∞–ª—å—Ü–µ–≤: "
        "[YouTube/ENG](https://www.youtube.com/watch?v=sB4lXUhRfMU&feature=youtu.be)\n\n"
        # "üî∏ –£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ —Å –≤–µ—Ä–µ–≤–∫–æ–π: "
        # "[–ü–æ—à–∞–≥–æ–≤–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è (YouTube)](https://www.youtube.com/watch?v=isWWtIwdiQE)\n\n"
        "üî∏ 10 —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –¥–ª—è —Å—Ç–æ–ø: [—Å–∞–π—Ç/—Ç–µ–∫—Å—Ç —Å –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏](https://mednew.site/sport/10-uprazhnenij-dlya-stop)\n\n"
        "üî∏ –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –Ω–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—é –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –ª–µ—Ç—á–∏–∫–æ–≤: [–≤–∏–¥–µ–æ](https://t.me/mscler/39573)\n\n"
        "üî∏ –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è –≤–µ—Å—Ç–∏–±—É–ª—è—Ä–Ω–æ–≥–æ –∞–ø–ø–∞—Ä–∞—Ç–∞: "
        "[—Å–∞–π—Ç/—Ç–µ–∫—Å—Ç —Å –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏](https://vladmedicina.ru/persons/p52698.htm)\n\n"
        "üî∏ [–®–∫–æ–ª–∞ –ø–∞—Ü–∏–µ–Ω—Ç–∞ (YouTube - –ú–æ—Å–û–†–°)](https://www.youtube.com/watch?v=FJ6WTcU-f3w&list=PLYhtMe98iobYeKgSScUwxoTKIEz8fA0Gl) - YouTube –ø–ª–µ–π–ª–∏—Å—Ç.\n\n",
        disable_web_page_preview=True
    )


@dp.message_handler(ChatType.is_private, text=['üìú –û–ø—Ä–æ—Å—ã'])
async def polls(m: Message):
    await m.answer(
        "üìÉ *–ë–ª–æ–∫ –æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è –ª—é–¥–µ–π c –†–∞—Å—Å–µ—è–Ω–Ω—ã–º —Å–∫–ª–µ—Ä–æ–∑–æ–º* \n\n"
        "–ï—Å–ª–∏ –±–æ–ª–µ–µ—Ç–µ –Ω–µ –≤—ã, –∞ –≤–∞—à –±–ª–∏–∑–∫–∏–π, —Ç–æ –¥–æ–ø—É—Å–∫–∞–µ—Ç—Å—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –æ—Ç –µ–≥–æ –ª–∏—Ü–∞. \n\n"
        "–í—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å —Å–≤–æ–π –≥–æ–ª–æ—Å –∏ –ø–µ—Ä–µ–≥–æ–ª–æ—Å–æ–≤–∞—Ç—å –∑–∞–Ω–æ–≤–æ.\n\n\n"
        "–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–í–ø–µ—Ä–µ–¥' ‚ñ∂",
        reply_markup=keyboards.polls_navigation()
    )


@dp.message_handler(ChatType.is_private, text=['üßë‚Äç‚öïÔ∏è –†–°-–¶–µ–Ω—Ç—Ä—ã'])
async def main_msc(m: Message):
    await m.answer(
        "üè• –î–∞–Ω–Ω–æ–µ –º–µ–Ω—é –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –Ω–∞–π—Ç–∏ –†–°-–¶–µ–Ω—Ç—Ä –≤ –≤–∞—à–µ–º –≥–æ—Ä–æ–¥–µ (–†–§) \n\n"
        "–ï—Å–ª–∏ –≤—ã –æ–±–Ω–∞—Ä—É–∂–∏–ª–∏, —á—Ç–æ –≤ –±–∞–∑–µ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –∫–∞–∫–æ–≥–æ-–ª–∏–±–æ *—Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ* –†–°-—Ü–µ–Ω—Ç—Ä–∞, "
        "–∫–æ—Ç–æ—Ä—ã–π *–≤–µ–¥–µ—Ç –ø—Ä–∏–µ–º –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –ø–æ –û–ú–°*, —Å–º–µ–ª–æ –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –∞–¥—Ä–µ—Å –ø—Ä—è–º–æ –≤ —ç—Ç–æ—Ç —á–∞—Ç.",
        reply_markup=keyboards.msc()
    )


@dp.message_handler(ChatType.is_private, text=['üåç –í—Å–µ —Ü–µ–Ω—Ç—Ä—ã'])
async def show_all_msc(m: Message):
    await m.answer(
        "*–°–ø–∏—Å–æ–∫ –¶–µ–Ω—Ç—Ä–æ–≤ –†–∞—Å—Å–µ—è–Ω–Ω–æ–≥–æ –°–∫–ª–µ—Ä–æ–∑–∞* \n\n"
        '[telegra.ph](https://telegra.ph/Spisok-RS-Centrov-06-08-19) | '
        '[–∑–µ—Ä–∫–∞–ª–æ](https://tgraph.io/Spisok-RS-Centrov-06-08-19)'
    )


@dp.message_handler(ChatType.is_private, content_types=['location'])
async def proc_location(m: Message):
    user_coords = (m.location.latitude, m.location.longitude)  # –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try:
        users_table = AioSQLiteWrapper("g35.sqlite", table_name="users")
        await users_table.save_location(m.from_user.id, user_coords)
    except Exception as e:
        print(e)

    best_distance, best_address = await calculate_distance(user_coords)

    await bot.delete_message(
        m.chat.id,
        m.message_id)

    await bot.send_venue(
        m.chat.id,
        best_address[4],
        best_address[5],
        best_address[3],
        best_address[2])

    await asyncio.sleep(1)

    answer = ", ".join(best_address[:4])
    await m.answer(
        "–ë–ª–∏–∂–∞–π—à–∏–π –æ—Ç –≤–∞—Å –¶–µ–Ω—Ç—Ä –†–∞—Å—Å–µ—è–Ω–Ω–æ–≥–æ C–∫–ª–µ—Ä–æ–∑–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ –∞–¥—Ä–µ—Å—É: \n\n"
        f"üî∏ {answer} \n\n"
        f"üöÅ –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ: {round(best_distance.km, 1)} –∫–º.")


@dp.message_handler(ChatType.is_private, content_types=['contact'])
async def contact_proc(m: Message):
    users_table = AioSQLiteWrapper("g35.sqlite", table_name="users")
    await users_table.save_phone(m.from_user.id, m.contact.phone_number)


@dp.message_handler(ChatType.is_private, text=["–í–ø–µ—Ä–µ–¥ ‚ñ∂Ô∏è"])
async def info(m: Message):
    users_table = AioSQLiteWrapper("g35.sqlite", "users")
    current_polls_page = await users_table.get_user_polls_page(m.from_user.id)
    next_page = current_polls_page + 1
    if next_page <= len(polls_id):
        poll_id = polls_id[next_page]
        await bot.forward_message(m.from_user.id, 698425366, poll_id)
        await users_table.set_user_polls_page(m.from_user.id, next_page)
    elif next_page > len(polls_id):
        await m.answer(
            "‚ù§Ô∏èÔ∏è –ö–æ–Ω–µ—Ü –±–ª–æ–∫–∞ –æ–ø—Ä–æ—Å–æ–≤. –°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ üôè"
        )


@dp.message_handler(ChatType.is_private, text=["‚óÄÔ∏è –ù–∞–∑–∞–¥"])
async def info(m: Message):
    users_table = AioSQLiteWrapper("g35.sqlite", "users")
    current_polls_page = await users_table.get_user_polls_page(m.from_user.id)
    previous_page = current_polls_page - 1
    if previous_page > 0:
        poll_id = polls_id[previous_page]
        await bot.forward_message(m.from_user.id, 698425366, poll_id)
        await users_table.set_user_polls_page(m.from_user.id, previous_page)
    elif previous_page <= 0:
        users_table = AioSQLiteWrapper("g35.sqlite", "users")
        await users_table.set_user_polls_page(m.from_user.id, 0)
        await polls(m)


@dp.message_handler(ChatType.is_private, text=["‚èÆÔ∏è –ù–∞—á–∞–ª–æ –æ–ø—Ä–æ—Å–æ–≤"])
async def info(m: Message):
    users_table = AioSQLiteWrapper("g35.sqlite", "users")
    await users_table.set_user_polls_page(m.from_user.id, 0)
    await polls(m)


@dp.message_handler(ChatType.is_private, commands=['mailing'])
async def start_mailing(m: Message):
    if m.from_user.id in config.admins:
        await m.answer(
            "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏",
            reply_markup=keyboards.canceling()
        )
        await Form.message_template.set()


@dp.message_handler(state=Form.message_template)
async def process_msg_template(m: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏–Ω—è—Ç—ã–π State —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ –∏
    –∑–∞–ø—É—Å–∫–∞–µ—Ç —Ä–∞—Å—Å—ã–ª–∫—É.
    """
    users_table = AioSQLiteWrapper("g35.sqlite", "users")
    all_users = await users_table.fetch_all_active_users()
    all_users_ids = await users_table.get_all_users_ids(all_users)
    await mailing.start_mailing(admin_id=m.from_user.id,
                                users_ids=all_users_ids,
                                text=m.text)
    await state.finish()


@dp.message_handler(ChatType.is_private, commands=['g35'])
async def say_to_g35(m: Message):
    """
    –°–∫–∞–∑–∞—Ç—å –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞ –≤ G35
    """
    if m.from_user.id in config.admins:
        text = utils.edit_cmd(m.text)
        await bot.send_message(
            config.matests,
            text
        )
        await bot.send_animation(
            chat_id=config.matests,
            animation="AAMCAgADGQEAAhqvXueMLoIs36dZrmU_cI1hrYoRBoQAAkMGAAKdpiFJRp2_h30a5ePbScoOAAQBAAdtAAO2fAACGgQ"
        )


@dp.message_handler(commands=['myid'])
async def my_id(m: Message):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –µ–≥–æ ID –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–µ
    """
    await m.reply(
        "–í–∞—à ID üëá \n\n"
        f"`{m.from_user.id}`"
    )


@dp.message_handler(commands=['creator'])
async def show_creator(m: Message):
    """
    –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å username —Å–æ–∑–¥–∞—Ç–µ–ª—è –±–æ—Ç–∞ (config.creator)
    """
    await m.answer(
        f'–ú–µ–Ω—è —Å–æ–∑–¥–∞–ª {config.creator}'
    )


@dp.message_handler(ChatType.is_private, content_types=['photo'])
async def get_photo_id(m: Message):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∞–¥–º–∏–Ω—É –±–æ—Ç–∞ ID –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Ñ–æ—Ç–æ.
    """
    if m.from_user.id in config.admins:
        await m.answer(
            f"`{m.photo[-1]['file_id']}`",
            parse_mode=None
        )


@dp.message_handler(state=Form.message_for_admin)
async def process_msg_to_admin(m: Message, state: FSMContext):
    await state.finish()
    if m.text == "–û—Ç–º–µ–Ω–∞ üö´":
        await main_menu(m)
        return
    elif m.text == "‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å":
        users_table = AioSQLiteWrapper("g35.sqlite", "users")
        msg_id = await users_table.get_saved_message_id(m.from_user.id)
        await bot.forward_message(config.main_admin, m.chat.id, msg_id)
        await asyncio.sleep(1)
        await m.answer('‚úÖ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ–¥–∞–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É',
                       reply_markup=keyboards.main_menu())


@dp.message_handler(ChatType.is_private)
async def all_messages(m: Message):
    """
    –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π. –ü–µ—Ä–µ—Å—ã–ª–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –±–æ—Ç–∞
    """
    users_table = AioSQLiteWrapper("g35.sqlite", "users")
    await users_table.save_last_msg_id(m.from_user.id, m.message_id)
    await m.answer('Ô∏èüëÜ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –±–æ—Ç–∞?',
                   reply_markup=keyboards.message_for_admin_yes_no())
    await Form.message_for_admin.set()



async def i_am_alive(sleep_for=28800):
    """
    –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è —Ñ-—è.
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∞–¥–º–∏–Ω—É —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Å–≤–æ–µ–π —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –∫–∞–∂–¥—ã–µ 'sleep_for' —Å–µ–∫—É–Ω–¥.
    """
    while True:
        await asyncio.sleep(sleep_for)  # –ü–∞—É–∑–∞. –¶–∏–∫–ª –∑–∞–º–∏—Ä–∞–µ—Ç –Ω–∞ sleep_for —Å–µ–∫—É–Ω–¥
        await bot.send_message(
            config.main_admin,
            "I am alive ",
            disable_notification=True
        )


if __name__ == '__main__':
    dp.loop.create_task(i_am_alive())

    if config.webhook is False:
        executor.start_polling(dp, skip_updates=True, on_startup=startup, on_shutdown=shutdown, relax=0.5)
